/*
 * Pirate Weather API
 *
 * Pirate Weather provides an open, free, and documented source of government weather data.
 *
 * The version of the OpenAPI document: 2.6.0
 * Contact: mail@pirateweather.net
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AlertsInner {
    /// A brief description of the alert.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// An array of strings containing all regions included in the weather alert.
    #[serde(rename = "regions", skip_serializing_if = "Option::is_none")]
    pub regions: Option<Vec<String>>,
    /// The severity of the weather alert.
    #[serde(rename = "severity", skip_serializing_if = "Option::is_none")]
    pub severity: Option<String>,
    /// The time the alert was issued in UNIX format.
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i32>,
    /// The time the alert expires in UNIX format.
    #[serde(rename = "expires", skip_serializing_if = "Option::is_none")]
    pub expires: Option<i32>,
    /// A detailed description of the alert.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// A HTTP(S) URL for more information about the alert.
    #[serde(rename = "uri", skip_serializing_if = "Option::is_none")]
    pub uri: Option<String>,
}

impl AlertsInner {
    pub fn new() -> AlertsInner {
        AlertsInner {
            title: None,
            regions: None,
            severity: None,
            time: None,
            expires: None,
            description: None,
            uri: None,
        }
    }
}
